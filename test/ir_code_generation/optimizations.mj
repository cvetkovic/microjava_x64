program TestProgram
    {
        void main()
            int a, b, c, d, e, f, g;
        {
            // ---- CSE
            //a = b * c;
            //d = b * c * e;
            //f = b * c * a;

            // constant folding
            //a = 2 * 3 + b;
            //a = 2 * 3 - 4 + b;

            // algebraic identities
            b = a + 0;
            b = a - 0;
            b = a - a;
            b = 2 * a;
            b = a * 1;
            b = a * 0;
            b = a / 1;
            b = a / a;

            // ---- CSE
            //a = d;
            //b = d;
            //c = d;
            //d = e;

            // ---- CSE
            //a = b + c;
            //b = b - d;
            //c = c + d;
            //e = b + c;

            // ---- CSE
            //a = b + c;
            //d = 5;
            //b = b + c;
            //d = b + c;

            // ---- identity
            //a = a;

            // constant folding
            a = 2 + 3 + 4 + 5 * 3;
            b = 3 * 3 / 3 + 4 - 9 + c;
            e = 3 * 3 / 3 + 4 - 9 + c;

            // algebraic identities and common subexpression elimination
            a = b + 0;
            a = a;
            c = 5;
            a = b + c;
            b = b + c;
            c = b + c;
            c = a;
            d = c + c;

            // dead code
            //d = b + a;
            //d = f + e;

            //k = new Klasa;

            // common subexpression elimination -> array
            //x = arr[i];
            //arr[j] = y;
            //x = arr[i];
            //y = arr[i];

            a = k.polje;
            BezKlase(1, 2, 3);
            b = k.polje;
            SaKlasom(k, 1, 2);  // this should delete the DAG
            c = k.polje;

            k.metodaKlase(4, 5, 6);

            k.polje = b;
            k.polje = c;
            k.polje = a;
        }
    }